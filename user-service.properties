example.property= I AM THE DEFAULT


spring.jpa.hibernate.ddl-auto=none
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.show-sql = true
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.database.driverClassName= org.postgresql.Driver
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1


spring.cloud.loadbalancer.ribbon.enabled = false


        
management.endpoints.web.exposure.include=*
management.endpoints.enabled-by-default=true

eureka.instance.preferIpAddress = true
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone = http://eurekaserver:8070/eureka/

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8090/realms/elearn-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8090/realms/elearn-realm/protocol/openid-connect/certs
spring.security.oauth2.client.registration.keycloak.client-secret=**********

spring.security.oauth2.client.registration.keycloak.client-id=elearning
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.keycloak.scope=openid

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://keycloak:8090/realms/elearn-realm
spring.security.oauth2.client.provider.keycloak.token-uri=http://keycloak:8090/realms/elearn-realm/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://keycloak:8090/realms/elearn-realm/protocol/openid-connect/certs

jwt.auth.converter.resource-access-id = elearning
jwt.auth.converter.principal-claim-name = preferred_username

management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
management.tracing.enabled=true
management.tracing.propagation.type=w3c

spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
